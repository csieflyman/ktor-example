include "application.conf"

myapp {
    server {
        env = "dev"
    }
    infra {
        logging {
            request {
                enabled = true
                destination = "Database" # File(default), Database, AwsKinesis
                includeHeaders = false
                includeQueryString = true
                includeResponseBody = true
                includeGetMethod = true
            }
            error {
                enabled = true
                destination = "Database" # File(default), Database, AwsKinesis
            }
            asyncExecutor {
                coroutineActor {
                    coroutines = 1
                    dispatcher {
                        fixedPoolSize = 1
                    }
                }
            }
        }
        auth {
            logging {
                enabled = true
                destination = "Database" # File(default), Database, AwsKinesis
            }
        }
        database {
            hikari {
                minimumIdle = 2
                maximumPoolSize = 5
            }
            asyncExeutor {
                coroutines = 1
                dispatcher {
                    fixedPoolSize = 1
                }
            }
        }
        redis {
            client {
                coroutines = 3
                dispatcher {
                    fixedPoolSize = 1
                }
            }
            subscribe {
                keyspaceNotification {
                    processor {
                        coroutines = 3
                        dispatcher {
                            fixedPoolSize = 1
                        }
                    }
                }
            }
        }
        notification {
            channels {
                email {
                    mock = false
                    awsSES {
                        nettyHttpClient {
                            http {
                                #maxConcurrency = 50 # => aws default value = 50
                                #maxPendingConnectionAcquires = 10000 => aws default value = 10000
                                #maxIdleConnectionTimeout = 60s => aws default value = 60s
                            }
                            threadPool {
                                fixedPoolSize = 1
                            }
                        }
                    }
                }
                push {
                    mock = false
                    fcm {
                        // https://github.com/firebase/firebase-admin-java/issues/317
                        // https://github.com/googleapis/google-auth-library-java/issues/356
                        // By default failing requests are retried up to 10 times with exponential backoff.
                        # connectTimeout = 60000
                        readTimeout = 180000
                        threadPool {
                            fixedPoolSize = 1
                        }
                    }
                }
                sms {
                    mock = true
                }
            }
            logging {
                enabled = true
                destination = "Database" # File(default), Database, AwsKinesis
                logSuccess = true
                logSuccessReqBody = true
                logSuccessRspBody = true
            }
            asyncExecutor {
                coroutineActor {
                    coroutines = 1
                    dispatcher {
                        fixedPoolSize = 1
                    }
                }
            }
        }
    }
    ops {
        auth {
            user {
                session {
                    expireDuration = 1d
                    extendDuration = 15m
                }
            }
        }
    }
    club {
        auth {
            android {
                session {
                    expireDuration = 1d
                    extendDuration = 15m
                }
            }
            iOS {
                session {
                    expireDuration = 1d
                    extendDuration = 15m
                }
            }
        }
    }
}
